#id: "org.mitre.attack.web_exploitation"
#version: "1.0.0"

category ApplicationLayer {
  asset WebServer {
    & discoverVulnerabilities [Exponential(0.1)] -> exploitKnownVulnerability
    | exploitKnownVulnerability [Exponential(0.5)] -> gainUnauthorizedAccess, dataStore.connect, internalNetworkDevice.gainNetworkAccess, webClient.exploitBrowserVulnerability
    & gainUnauthorizedAccess [Exponential(1.0)] -> uploadMaliciousFile, escalatePrivileges
    & uploadMaliciousFile [Exponential(0.8)] -> executeUploadedFile
    & executeUploadedFile [Exponential(2.0)]
    | escalatePrivileges [Exponential(0.3)]
    # softwarePatched -> exploitKnownVulnerability
    # webApplicationFirewall -> exploitKnownVulnerability
    # networkSegmentationDMZ -> internalNetworkDevice.gainNetworkAccess
    # leastPrivilegeServiceAccount -> escalatePrivileges
  }
  asset Database {
    & connect [Exponential(1.5)] -> attemptSqlInjection
    | attemptSqlInjection [Exponential(0.7)] -> exfiltrateSensitiveData
    & exfiltrateSensitiveData [Exponential(0.2)]
    # inputValidationOnQueries -> attemptSqlInjection
    # accessControlsEnforced -> connect
  }
  asset ClientBrowser {
    & visitCompromisedWebsite [Exponential(0.05)] -> exploitBrowserVulnerability
    | exploitBrowserVulnerability [Exponential(0.6)] -> manipulateTrafficOrDOM
    & manipulateTrafficOrDOM [Exponential(0.9)]
    # browserSoftwarePatched -> exploitBrowserVulnerability
    # securityExtensionsEnabled -> exploitBrowserVulnerability
  }
}

category NetworkLayer {
  asset NetworkInfrastructure {
    & scanForOpenPortsServices [Exponential(0.1)] -> exploitFirmwareVulnerability
    | exploitFirmwareVulnerability [Exponential(0.4)] -> gainNetworkAccess
    | gainNetworkAccess [Exponential(1.2)]
    # firmwareUpdated -> exploitFirmwareVulnerability
    # strongAdminCredentials -> gainNetworkAccess
    # disabledUnnecessaryServices -> exploitFirmwareVulnerability
  }
}

associations {
  WebServer [hostingPlatform] * <-- WebServerHostsOnNetwork --> * [hostedApplication] NetworkInfrastructure
  WebServer [dataStore] * <-- WebServerQueriesDatabase --> * [databaseClient] Database
  ClientBrowser [contentProvider] * <-- ClientAccessesWebServer --> * [webClient] WebServer
  WebServer [internalNetworkDevice] * <-- WebServerInternalAccess --> * [internalNetworkPivotSource] NetworkInfrastructure
}